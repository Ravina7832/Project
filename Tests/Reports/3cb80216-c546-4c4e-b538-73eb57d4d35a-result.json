{"name": "Add Users", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input\" tabindex=\"0\" role=\"button\" aria-haspopup=\"listbox\" aria-labelledby=\"label select\" id=\"select\">...</div> is not clickable at point (1037, 158). Other element would receive the click: <div class=\"loader_loader__2d6FG\">...</div>\n  (Session info: chrome=94.0.4606.71)", "trace": "self = <Tests.Test_AddUsersPage.Test_AddUsers object at 0x102de4f70>\n\n    @allure.title(\"Add Users\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_addUsers(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.do_login(TestData.USERNAME, TestData.PASSWORD)\n        self.click_user = HomePage(self.driver)\n        self.click_user.sel_users()\n        self.users = AddUsers(self.driver)\n        self.users.users()\n        self.users.add_users(TestData.FIRSTNAME, TestData.LASTNAME, TestData.EMAIL, TestData.PHONE,\n                             TestData.PASSWORD1, TestData.CONFIRMPASSWORD, TestData.DATE)\n>       self.users.search_users(TestData.SEARCH_NAME, TestData.SEARCH_EMAIL, TestData.PHONE)\n\nTests/Test_AddUsersPage.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/BasePage.py:13: in wrapper\n    return func(*args, **kwargs)\nPages/AddUsersPage.py:82: in search_users\n    self.do_click(self.FIELDS)\nPages/BasePage.py:32: in do_click\n    self.wait_for_element(by_locator).click()\nvenv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:80: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:633: in _execute\n    return self._parent.execute(command, params)\nvenv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x102e15070>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...fff203228fc _pthread_start + 224\\\\n24  libsystem_pthread.dylib             0x00007fff2031e443 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input\" tabindex=\"0\" role=\"button\" aria-haspopup=\"listbox\" aria-labelledby=\"label select\" id=\"select\">...</div> is not clickable at point (1037, 158). Other element would receive the click: <div class=\"loader_loader__2d6FG\">...</div>\nE         (Session info: chrome=94.0.4606.71)\n\nvenv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:242: ElementClickInterceptedException"}, "steps": [{"name": "Verify login", "status": "passed", "parameters": [{"name": "args", "value": "(<Pages.LoginPage.LoginPage object at 0x102df63d0>, 'qa@view.com', 'viewnet195!')"}], "start": 1633602867923, "stop": 1633602869755}, {"name": "Verify Dropdown Feature", "status": "passed", "parameters": [{"name": "args", "value": "(<Pages.HomePage.HomePage object at 0x102e15b80>,)"}], "start": 1633602869755, "stop": 1633602876693}, {"name": "Verify Users", "status": "passed", "parameters": [{"name": "args", "value": "(<Pages.AddUsersPage.AddUsers object at 0x102e15e50>,)"}], "start": 1633602876693, "stop": 1633602878861}, {"name": "Verify Add Users", "status": "passed", "parameters": [{"name": "args", "value": "(<Pages.AddUsersPage.AddUsers object at 0x102e15e50>, 'Christopher', 'Simon', 'otaylor@example.org', '8799665455', '123456789', '123456789', '2016-12-19')"}], "start": 1633602878861, "stop": 1633602883125}, {"name": "Verify Search feature", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input\" tabindex=\"0\" role=\"button\" aria-haspopup=\"listbox\" aria-labelledby=\"label select\" id=\"select\">...</div> is not clickable at point (1037, 158). Other element would receive the click: <div class=\"loader_loader__2d6FG\">...</div>\n  (Session info: chrome=94.0.4606.71)\n\n", "trace": "  File \"/Users/pc/PycharmProjects/Project/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/pc/PycharmProjects/Project/Pages/BasePage.py\", line 13, in wrapper\n    return func(*args, **kwargs)\n  File \"/Users/pc/PycharmProjects/Project/Pages/AddUsersPage.py\", line 82, in search_users\n    self.do_click(self.FIELDS)\n  File \"/Users/pc/PycharmProjects/Project/Pages/BasePage.py\", line 32, in do_click\n    self.wait_for_element(by_locator).click()\n  File \"/Users/pc/PycharmProjects/Project/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py\", line 80, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/pc/PycharmProjects/Project/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py\", line 633, in _execute\n    return self._parent.execute(command, params)\n  File \"/Users/pc/PycharmProjects/Project/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/pc/PycharmProjects/Project/venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "attachments": [{"name": "Screenshot", "source": "e246f042-3dbb-46ca-a75a-c6d5c988f1ce-attachment.png", "type": "image/png"}], "parameters": [{"name": "args", "value": "(<Pages.AddUsersPage.AddUsers object at 0x102e15e50>, 'Barbara Whitney', 'abarry@example.org', '8799665455')"}], "start": 1633602883126, "stop": 1633602884840}], "parameters": [{"name": "set_up", "value": "'chrome'"}], "start": 1633602862736, "stop": 1633602884844, "uuid": "5cf5e00e-fde2-400b-81bc-79e45bee8f9e", "historyId": "ed2c883a389f4a621b899e4238c51ae1", "testCaseId": "096972dbe86886404b7b83209040e648", "fullName": "Tests.Test_AddUsersPage.Test_AddUsers#test_addUsers", "labels": [{"name": "feature", "value": "Users Module"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('set_up')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "Test_AddUsersPage"}, {"name": "subSuite", "value": "Test_AddUsers"}, {"name": "host", "value": "pcs-MacBook-Pro.local"}, {"name": "thread", "value": "4034-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.Test_AddUsersPage"}]}